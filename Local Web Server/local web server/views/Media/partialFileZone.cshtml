@model Local_Web_Server.Models.FileZone
<table style="width:90%" class="table table-striped table-bordered" id="dataTable" align="center">
    <thead style="background-color:#B8D4FF">
        <tr>
            <th>File Name</th>
            <th>Size</th>
            <th>File Type</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var folder in Model.Folders)
        {
            var folderSize = folder.EnumerateFiles("*.*", SearchOption.AllDirectories).Sum(fi => fi.Length);
            var displayedSize = "0 B";
            if (folderSize > 1000)
            {
                displayedSize = folderSize / 1000 + " Kb";
            }
            if (folderSize / 1000 > 1000)
            {
                displayedSize = folderSize / 1000 / 1000 + " Mb";
            }
            if ((folderSize / 1000) / 1000 > 1000)
            {
                displayedSize = (folderSize / 1000) / 1000 / 1000 + " Gb";
            }
            
            <tr><td class="FolderDetails" style="cursor: pointer; width:83%; vertical-align:middle;" onclick="folderClick($(this))">@folder.Name<div class="box"><button class="btn btn-default rename" data-toggle="modal" data-target="#renameModal" id="@folder.FullName" onclick="renameClick()">Rename</button><button class="btn btn-default" id="@folder.FullName" onclick="ChangeDirectory($(this))">Open</button></div></td><td style="width:6%; vertical-align:middle; font-size:smaller;">@displayedSize</td><td style="width:5%; vertical-align:middle; font-size:smaller;">Folder</td><td style="width:5%; vertical-align:middle" align="center"><button type="button" data-toggle="modal" data-target="#folderModal" id="@folder.FullName" class="delete btn btn-danger" onclick="DeleteClick($(this))"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button></td></tr>
        }
        @foreach (var item in Model.Files)
        {
            string name = "";
            <tr>
                @{
            int cut = 0;
            for (int i = item.Title.Length - 1; i > 0; i--)
            {
                if (item.Title[i] == '.')
                {
                    cut = i;
                    break;
                }
            }
            name = item.Title.Substring(0, cut);
                }
                <td style="width:83%; vertical-align:middle">
                    @{
                        if (Model.CurrentDirectory == new DirectoryInfo(Server.MapPath(@"\") + "FileZone").ToString())
                        {
                            <a href="~/FileZone/@item.Title" target="_blank" download><span class="glyphicon glyphicon-download-alt" aria-hidden="true"></span> @name</a>
                            if (item.Format.ToLower() == ".jpg" || item.Format.ToLower() == ".png" || item.Format.ToLower() == ".gif")
                            {
                                <div class="box"> <img src="~/FileZone/@item.Title" style="width:150px;height:150px;" /></div>
                            }
                        }
                        else
                        {
                            string path = Model.CurrentDirectory;
                            string homeFileLocation = new DirectoryInfo(Server.MapPath(@"\") + "FileZone").ToString();
                            var newPath = "";
                            
                            if (path.Length > homeFileLocation.Length) 
                            {
                                newPath = path.Substring(homeFileLocation.Length);
                                newPath = newPath.Substring(1);
                            }                          
                            
                            <a href="~/FileZone/@newPath/@item.Title" target="_blank" download>@name</a>
                            if (item.Format.ToLower() == ".jpg" || item.Format.ToLower() == ".png" || item.Format.ToLower() == ".gif")
                            {
                                <div class="imgPreview"> <img src="~/FileZone/@newPath/@item.Title" style="width:150px;height:150px;" /></div>
                            }
                        }
}
                </td>
                @{
                    var output = "";
                    if (item.Size > 1000)
                    {
                        output = item.Size / 1000 + " Kb";
                    }
                    if (item.Size / 1000 > 1000)
                    {
                        output = item.Size / 1000 / 1000 + " Mb";
                    }
                    if ((item.Size / 1000) / 1000 > 1000)
                    {
                        output = (item.Size / 1000) / 1000 / 1000 + " Gb";
                    }
                }
                <td style="width:6%; vertical-align:middle; font-size:smaller;">@output</td>
                <td style="width:6%; vertical-align:middle; font-size:smaller;">@item.Format</td>
                <td align="center" style="width:5%; vertical-align:middle"><button type="button" data-toggle="modal" data-target="#myModal" id="@item.Title" class="delete btn btn-danger" onclick="DeleteClick($(this))"><span class="glyphicon glyphicon-trash" aria-hidden="true"></span></button></td>
            </tr>
        }
    </tbody>
</table>